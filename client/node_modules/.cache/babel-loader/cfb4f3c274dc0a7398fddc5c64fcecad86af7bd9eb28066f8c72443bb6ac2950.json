{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\v_a_venkat\\\\Documents\\\\project\\\\twitter-clone\\\\client\\\\src\\\\components\\\\TweetBox.js\",\n  _s = $RefreshSig$();\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport React, { useState } from 'react';\nimport './TweetBox.css';\n// import db from './firebase'\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:4000\";\nfunction TweetBox() {\n  _s();\n  const [tweetMessage, setTweetMessage] = useState(\"\");\n  // const [tweetImage, setTweetImage] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const sendTweet = async e => {\n    e.preventDefault();\n    try {\n      e.preventDefault();\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('tweet_text', tweetMessage);\n\n      // fetch('/upload', {\n      // method: 'POST',\n      // body: formData\n      // })\n      const response = await fetch(API_BASE + '/api/v1/tweet', {\n        method: \"POST\",\n        body: formData,\n        credentials: \"include\"\n      });\n      const convertedRespones = await response.json();\n      if (convertedRespones.success === true) {\n        navigate(\"/home\");\n      }\n      console.log(convertedRespones);\n    } catch (error) {\n      // setErrorMessage(\"Tweet is not posted...\");\n      console.log(error);\n    }\n    setTweetMessage(\"\");\n    setFile();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tweetBox\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweetBox__input\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: \"https://res.cloudinary.com/ddxco6opc/image/upload/v1691867097/statuscode/sh7iwxyinjjnq2njkugv.jpg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setTweetMessage(e.target.value),\n          value: tweetMessage,\n          placeholder: \"What's happening\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        placeholder: \"Optional : Enter Image URL\",\n        className: \"tweetBox__imageInput\",\n        name: \"file\",\n        accept: \"image/*\",\n        onChange: e => setFile(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: sendTweet,\n        className: \"tweetBox__tweetButton\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(TweetBox, \"pkGBASlxrgcyDG7z6unAQvBUBRg=\");\n_c = TweetBox;\nexport default TweetBox;\nvar _c;\n$RefreshReg$(_c, \"TweetBox\");","map":{"version":3,"names":["Avatar","Button","React","useState","jsxDEV","_jsxDEV","API_BASE","TweetBox","_s","tweetMessage","setTweetMessage","file","setFile","sendTweet","e","preventDefault","formData","FormData","append","response","fetch","method","body","credentials","convertedRespones","json","success","navigate","console","log","error","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","onChange","target","value","placeholder","type","name","accept","files","onClick","_c","$RefreshReg$"],"sources":["C:/Users/v_a_venkat/Documents/project/twitter-clone/client/src/components/TweetBox.js"],"sourcesContent":["import Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport React, { useState } from 'react'\r\nimport './TweetBox.css'\r\n// import db from './firebase'\r\nconst API_BASE=\"http://localhost:4000\";\r\n\r\nfunction TweetBox() {\r\n    const [tweetMessage, setTweetMessage] = useState(\"\");\r\n    // const [tweetImage, setTweetImage] = useState(\"\");\r\n    const [file, setFile] = useState(null);\r\n\r\n    const sendTweet = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            e.preventDefault();\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            formData.append('tweet_text', tweetMessage);\r\n\r\n            // fetch('/upload', {\r\n            // method: 'POST',\r\n            // body: formData\r\n            // })\r\n            const response = await fetch(API_BASE + '/api/v1/tweet', {\r\n                method: \"POST\",\r\n                body : formData,\r\n                credentials: \"include\",\r\n            });\r\n\r\n            const convertedRespones = await response.json();\r\n            if(convertedRespones.success=== true){\r\n                navigate(\"/home\");\r\n            }\r\n\r\n            console.log(convertedRespones);\r\n        } catch (error) {\r\n            // setErrorMessage(\"Tweet is not posted...\");\r\n            console.log(error);\r\n        }\r\n\r\n        setTweetMessage(\"\");\r\n        setFile();\r\n    }\r\n\r\n    return (\r\n        <div className = \"tweetBox\">\r\n            <form>\r\n                <div className = \"tweetBox__input\">\r\n                    <Avatar\r\n                        src = \"https://res.cloudinary.com/ddxco6opc/image/upload/v1691867097/statuscode/sh7iwxyinjjnq2njkugv.jpg\"\r\n                    />\r\n                    <input \r\n                        onChange = {(e) => setTweetMessage(e.target.value)}\r\n                        value = {tweetMessage} \r\n                        placeholder = \"What's happening\" \r\n                        type = \"text\" \r\n                    />\r\n                </div>\r\n                {/* <input \r\n                    onChange = { (e) => setTweetImage(e.target.value) }\r\n                    value = {tweetImage}\r\n                    className = \"tweetBox__imageInput\"\r\n                    placeholder = \"Optional : Enter Image URL\"\r\n                    type = \"text\"\r\n                /> */}\r\n                <input type=\"file\" placeholder=\"Optional : Enter Image URL\" className = \"tweetBox__imageInput\"\r\n                name=\"file\" accept=\"image/*\"\r\n                onChange={(e) => setFile(e.target.files[0])}/>\r\n                <Button \r\n                onClick = { sendTweet }\r\n                className = \"tweetBox__tweetButton\">Post</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TweetBox"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}