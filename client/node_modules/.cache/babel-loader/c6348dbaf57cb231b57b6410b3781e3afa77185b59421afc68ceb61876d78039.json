{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\v_a_venkat\\\\Documents\\\\project\\\\twitter-clone\\\\client\\\\src\\\\components\\\\ProtectedRoutes.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport App from '../App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:4000\";\nconst useAuth = async () => {\n  _s();\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  try {\n    const response = await fetch(API_BASE + '/api/v1/userdashboard', {\n      method: \"GET\"\n    });\n    const convertedRespones = await response.json();\n    console.log(convertedRespones);\n    // console.log(\"Hi\");\n    return convertedRespones.success;\n  } catch (error) {\n    setErrorMessage(\"You are Not ALoowed This Source...\");\n    console.log(error);\n    console.log(\"hi\");\n    return false;\n  }\n};\n_s(useAuth, \"lxcuhsXa5Nyd5poIg+ycrIcH1MU=\");\nconst ProtectedRoutes = () => {\n  _s2();\n  const navigate = useNavigate();\n  const isAuth = useAuth();\n  return isAuth ? /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this) : navigate(\"/\");\n};\n_s2(ProtectedRoutes, \"5lxzjHh/t4z7KgJyXsg42fu1zqs=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"names":["React","useState","useNavigate","App","jsxDEV","_jsxDEV","API_BASE","useAuth","_s","errorMessage","setErrorMessage","response","fetch","method","convertedRespones","json","console","log","success","error","ProtectedRoutes","_s2","navigate","isAuth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/v_a_venkat/Documents/project/twitter-clone/client/src/components/ProtectedRoutes.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport App from '../App';\r\nconst API_BASE=\"http://localhost:4000\";\r\n\r\n\r\nconst useAuth = async () => {\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n\r\n    try {\r\n        const response = await fetch(API_BASE + '/api/v1/userdashboard', {\r\n            method: \"GET\",\r\n        });\r\n\r\n        const convertedRespones = await response.json();\r\n        console.log(convertedRespones);\r\n        // console.log(\"Hi\");\r\n        return convertedRespones.success;\r\n    } catch (error) {\r\n        setErrorMessage(\"You are Not ALoowed This Source...\")\r\n        console.log(error);\r\n        console.log(\"hi\");\r\n        return false;\r\n    }\r\n}\r\n\r\nconst ProtectedRoutes = () => {\r\n    const navigate = useNavigate();\r\n    const isAuth = useAuth();\r\n\r\n    return isAuth ? (\r\n        <App />\r\n    ) : (\r\n        navigate(\"/\")\r\n    );\r\n}\r\n\r\nexport default ProtectedRoutes;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,WAAW,QAAO,kBAAkB;AAC5C,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACzB,MAAMC,QAAQ,GAAC,uBAAuB;AAGtC,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;EAAAC,EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EAE1D,IAAI;IACA,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAACN,QAAQ,GAAG,uBAAuB,EAAE;MAC7DO,MAAM,EAAE;IACZ,CAAC,CAAC;IAEF,MAAMC,iBAAiB,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC/CC,OAAO,CAACC,GAAG,CAACH,iBAAiB,CAAC;IAC9B;IACA,OAAOA,iBAAiB,CAACI,OAAO;EACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZT,eAAe,CAAC,oCAAoC,CAAC;IACrDM,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IAClBH,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;IACjB,OAAO,KAAK;EAChB;AACJ,CAAC;AAAAT,EAAA,CAlBKD,OAAO;AAoBb,MAAMa,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC1B,MAAMC,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAC9B,MAAMqB,MAAM,GAAGhB,OAAO,CAAC,CAAC;EAExB,OAAOgB,MAAM,gBACTlB,OAAA,CAACF,GAAG;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,GAEPL,QAAQ,CAAC,GAAG,CACf;AACL,CAAC;AAAAD,GAAA,CATKD,eAAe;EAAA,QACAlB,WAAW,EACbK,OAAO;AAAA;AAAAqB,EAAA,GAFpBR,eAAe;AAWrB,eAAeA,eAAe;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}